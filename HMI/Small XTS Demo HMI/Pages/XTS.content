<div id="XTS" data-tchmi-type="TcHmi.Controls.System.TcHmiContent" data-tchmi-top="0" data-tchmi-left="0" data-tchmi-width="100" data-tchmi-height="100" data-tchmi-width-unit="%" data-tchmi-height-unit="%">
<div id="TcHmiGrid_XTS" data-tchmi-type="TcHmi.Controls.System.TcHmiGrid" data-tchmi-height-unit="px" data-tchmi-left="2" data-tchmi-left-unit="px" data-tchmi-top="2" data-tchmi-top-unit="px" data-tchmi-width-unit="px" data-tchmi-right="2" data-tchmi-bottom="2">
<div id="XtsView" data-tchmi-type="TcHmi.XTS.Controls.XtsView" data-tchmi-displaydimensions="false" data-tchmi-height-unit="px" data-tchmi-invertdimensions="false" data-tchmi-layout="Custom" data-tchmi-left="12" data-tchmi-left-unit="px" data-tchmi-lockpan="true" data-tchmi-lockzoom="true" data-tchmi-movertype="SystemView" data-tchmi-refreshrate="16" data-tchmi-selectionmode="SingleSelection" data-tchmi-showdriveerrors="true" data-tchmi-showdrivewarnings="true" data-tchmi-targetname="Local" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-viewrotation="0" data-tchmi-width-unit="px" data-tchmi-right="12" data-tchmi-bottom="0" data-tchmi-displaystations="false" data-tchmi-grid-row-index="0" data-tchmi-moverselection="%s%PLC1.MAIN.Demo.__FB_DEMO__M_USERINPUT__SSELECTEDMOVERS|BindingMode=TwoWay|BindingEvent=onSelectedMoverChanged%/s%">
<script data-tchmi-target-attribute="data-tchmi-toolarray" type="application/json">
[]
</script>
<script data-tchmi-target-attribute="data-tchmi-infoimages" type="application/json">
[]
</script>
<script data-tchmi-target-attribute="data-tchmi-parttransformation" type="application/json">
[]
</script>
<script data-tchmi-target-attribute="data-tchmi-transformation" type="application/json">
[]
</script>
<script data-tchmi-target-attribute="data-tchmi-custommoverlayout" type="application/json">
{
  "ImageSrcFrontSide": null,
  "ImageWidthFrontSide": 70,
  "ImageHeightFrontSide": 126,
  "XOffsetFrontSide": 0,
  "YOffsetFrontSide": 0,
  "ImageSrcBackSide": "",
  "ImageWidthBackSide": 70,
  "ImageHeightBackSide": 80,
  "XOffsetBackSide": 0,
  "YOffsetBackSide": 0
}
</script>


<script data-tchmi-target-attribute="data-tchmi-moduleselectioncolor" type="application/json">
{
  "color": "Transparent"
}
</script>
<script data-tchmi-target-attribute="data-tchmi-moverselectioncolor" type="application/json">
{
  "color": "Transparent"
}
</script>


<script data-tchmi-target-attribute="data-tchmi-dimensionoptions" type="application/json">
{
  "Displacement": 100,
  "InfoBarThickness": 8,
  "MarkerThickness": 5,
  "MarkerSize": 25,
  "MarkerType": "Tick",
  "TextPattern": 2,
  "TextDisplacement": 10,
  "zIndex": 1200,
  "InfoBarColor": {
    "color": "black"
  },
  "MarkerColor": {
    "color": "black"
  },
  "TextOptions": {
    "FontStyle": "Normal",
    "FontWeight": "Normal",
    "FontFamily": "",
    "HorizontalAlignment": "Center",
    "VerticalAlignment": "Bottom",
    "FontSize": 20,
    "Color": {
      "color": "black"
    }
  }
}
</script>





<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "XtsView.onAttached",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%ctrl%XtsView::MoverSelectionColor%/ctrl%",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:framework#/definitions/SolidColor",
          "value": {
            "color": "rgba(28, 155, 229, 0.1960784)"
          }
        },
        "asyncWait": true
      },
      {
        "objectType": "Comment",
        "comment": "captures mouse and touch position, and writes to the PLC"
      },
      {
        "objectType": "JavaScript",
        "active": true,
        "sourceLines": [
          "(function () {",
          "  const activeTouch = { identifier: null, x: null };",
          "  const canvas = document.getElementById('XtsView');",
          "",
          "  function startDrag(event) {",
          "    if (event.type === 'mousedown') {",
          "      activeTouch.identifier = 'mouse';",
          "      activeTouch.x = event.clientX;",
          "    } else if (event.type === 'touchstart') {",
          "      const touch = event.touches[0];",
          "      activeTouch.identifier = touch.identifier;",
          "      activeTouch.x = touch.clientX;",
          "    }",
          "    updateSymbols();",
          "  }",
          "",
          "  function updateDrag(event) {",
          "    if (event.type === 'mousemove' && activeTouch.identifier === 'mouse') {",
          "      activeTouch.x = event.clientX;",
          "    } else if (event.type === 'touchmove') {",
          "      event.preventDefault();",
          "      const touch = event.changedTouches[0];",
          "      if (touch.identifier === activeTouch.identifier) {",
          "        activeTouch.x = touch.clientX;",
          "      }",
          "    }",
          "    updateSymbols();",
          "  }",
          "",
          "  function endDrag(event) {",
          "    if (event.type === 'mouseup' && activeTouch.identifier === 'mouse') {",
          "      activeTouch.identifier = null;",
          "      activeTouch.x = null;",
          "    } else if (event.type === 'touchend' || event.type === 'touchcancel') {",
          "      const touch = event.changedTouches[0];",
          "      if (touch.identifier === activeTouch.identifier) {",
          "        activeTouch.identifier = null;",
          "        activeTouch.x = null;",
          "      }",
          "    }",
          "    updateSymbols();",
          "  }",
          "",
          "  function updateSymbols() {",
          "    if (activeTouch.x === null) {",
          "      TcHmi.Symbol.writeEx('%s%PLC1.MAIN.Demo.NumTouches%/s%', 0, function (data) { });",
          "    } else {",
          "      const canvasWidth = canvas.clientWidth;",
          "      const scaleFactor = 500 / canvasWidth;",
          "      const scaledX = parseFloat((activeTouch.x * scaleFactor).toFixed(2));",
          "      console.log('X position:', scaledX);",
          "",
          "      TcHmi.Symbol.writeEx('%s%PLC1.MAIN.Demo.SingleFingerXPos%/s%', scaledX, function (data) { });",
          "      TcHmi.Symbol.writeEx('%s%PLC1.MAIN.Demo.NumTouches%/s%', 1, function (data) { });",
          "    }",
          "  }",
          "",
          "  canvas.addEventListener('mousedown', startDrag);",
          "  canvas.addEventListener('mousemove', updateDrag);",
          "  canvas.addEventListener('mouseup', endDrag);",
          "  canvas.addEventListener('touchstart', startDrag);",
          "  canvas.addEventListener('touchmove', updateDrag, { passive: false });",
          "  canvas.addEventListener('touchend', endDrag);",
          "  canvas.addEventListener('touchcancel', endDrag);",
          "})();",
          "",
          "document.addEventListener('contextmenu', function(event) {",
          "    if ('ontouchstart' in window || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0) {",
          "        event.preventDefault();",
          "    }",
          "});",
          ""
        ],
        "injectContextObject": false,
        "asyncWait": true,
        "waitMode": "Synchronous"
      }
    ]
  }
]
</script>


</div>

<script data-tchmi-target-attribute="data-tchmi-row-options" type="application/json">
[
  {
    "height": 0.8,
    "heightUnit": "factor",
    "heightMode": "Value",
    "maxHeightUnit": "px",
    "minHeightUnit": "px",
    "overflow": false
  },
  {
    "height": 0.2,
    "heightUnit": "factor",
    "heightMode": "Value",
    "maxHeightUnit": "px",
    "minHeightUnit": "px",
    "overflow": false
  }
]
</script>
<div id="TcHmiGrid_XTS_Buttons" data-tchmi-type="TcHmi.Controls.System.TcHmiGrid" data-tchmi-height-unit="px" data-tchmi-left="0" data-tchmi-left-unit="px" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-width-unit="px" data-tchmi-grid-row-index="1" data-tchmi-right="0" data-tchmi-bottom="0">

<script data-tchmi-target-attribute="data-tchmi-column-options" type="application/json">
[
  {
    "width": 1.0,
    "widthUnit": "factor",
    "widthMode": "Value",
    "maxWidthUnit": "px",
    "minWidthUnit": "px",
    "overflow": false
  },
  {
    "width": 1.0,
    "widthUnit": "factor",
    "widthMode": "Value",
    "maxWidthUnit": "px",
    "minWidthUnit": "px",
    "overflow": false
  },
  {
    "width": 1.0,
    "widthUnit": "factor",
    "widthMode": "Value",
    "maxWidthUnit": "px",
    "minWidthUnit": "px",
    "overflow": false
  },
  {
    "width": 1.0,
    "widthUnit": "factor",
    "widthMode": "Value",
    "maxWidthUnit": "px",
    "minWidthUnit": "px",
    "overflow": false
  },
  {
    "width": 1.0,
    "widthUnit": "factor",
    "widthMode": "Value",
    "maxWidthUnit": "px",
    "minWidthUnit": "px",
    "overflow": false
  },
  {
    "width": 1.0,
    "widthUnit": "factor",
    "widthMode": "Value",
    "maxWidthUnit": "px",
    "minWidthUnit": "px",
    "overflow": false
  },
  {
    "width": 1.0,
    "widthUnit": "factor",
    "widthMode": "Value",
    "maxWidthUnit": "px",
    "minWidthUnit": "px",
    "overflow": false
  }
]
</script>
<div id="StartButton" data-tchmi-type="TcHmi.Controls.System.TcHmiUserControlHost" data-tchmi-grid-column-index="2" data-tchmi-grid-row-index="0" data-tchmi-height-unit="px" data-tchmi-left="0" data-tchmi-left-unit="px" data-tchmi-target-user-control="UserControls/UCToggleButton.usercontrol" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-width-unit="px" data-tchmi-right="0" data-tchmi-bottom="0" data-tchmi-filepathonstate="Images/Buttons/start_pressed.svg" data-tchmi-filepathoffstate="Images/Buttons/start_normal.svg" data-tchmi-buttonpremisive="%s%PLC1.MAIN.Demo.StartPremisive%/s%" data-tchmi-buttonpress="%s%PLC1.MAIN.Demo.Start%/s%">
</div>
<div id="StopButton" data-tchmi-type="TcHmi.Controls.System.TcHmiUserControlHost" data-tchmi-grid-column-index="3" data-tchmi-grid-row-index="0" data-tchmi-height-unit="px" data-tchmi-left="0" data-tchmi-left-unit="px" data-tchmi-target-user-control="UserControls/UCToggleButton.usercontrol" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-width-unit="px" data-tchmi-right="0" data-tchmi-bottom="0" data-tchmi-filepathonstate="Images/Buttons/stop_pressed.svg" data-tchmi-filepathoffstate="Images/Buttons/stop_normal.svg" data-tchmi-buttonpress="%s%PLC1.MAIN.Demo.Stop%/s%" data-tchmi-buttonpremisive="%s%PLC1.MAIN.Demo.StopPremisive%/s%">
</div>
<div id="ResetButton" data-tchmi-type="TcHmi.Controls.System.TcHmiUserControlHost" data-tchmi-grid-column-index="4" data-tchmi-grid-row-index="0" data-tchmi-height-unit="px" data-tchmi-left="0" data-tchmi-left-unit="px" data-tchmi-target-user-control="UserControls/UCToggleButton.usercontrol" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-width-unit="px" data-tchmi-right="0" data-tchmi-bottom="0" data-tchmi-filepathonstate="Images/Buttons/reset_pressed.svg" data-tchmi-filepathoffstate="Images/Buttons/reset_normal.svg" data-tchmi-buttonpress="%s%PLC1.MAIN.Demo.Reset%/s%" data-tchmi-buttonpremisive="%s%PLC1.MAIN.Demo.ResetPremisive%/s%">
</div>


<div id="TcHmiTextblock_Settings_Theme_2" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="26" data-tchmi-height-unit="px" data-tchmi-left="2" data-tchmi-left-unit="px" data-tchmi-text="%l%L_Mode%/l%" data-tchmi-top="2" data-tchmi-top-unit="px" data-tchmi-width-unit="px" data-tchmi-word-wrap="True" data-tchmi-right="2">
<script data-tchmi-target-attribute="data-tchmi-class-names" type="application/json">
          [
          "headline-3"
          ]
        </script>
      </div>
<div id="TcHmiComboboxMode" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiCombobox" data-tchmi-auto-focus-out="true" data-tchmi-combobox-text="Select" data-tchmi-height-unit="px" data-tchmi-left="2" data-tchmi-left-unit="px" data-tchmi-top="50" data-tchmi-top-unit="px" data-tchmi-width-unit="px" data-tchmi-enum-data-symbol="%s%PLC1.MAIN.Demo.Mode%/s%" data-tchmi-right="2" data-tchmi-bottom="2" data-tchmi-height="25">
<script data-tchmi-target-attribute="data-tchmi-content-padding" type="application/json">
{
  "top": 3,
  "right": 3,
  "bottom": 3,
  "left": 3
}
</script>

</div>

<script data-tchmi-target-attribute="data-tchmi-row-options" type="application/json">
[
  {
    "height": 1.0,
    "heightUnit": "factor",
    "heightMode": "Value",
    "maxHeightUnit": "px",
    "minHeightUnit": "px",
    "overflow": false
  }
]
</script>
</div>
</div>
</div>